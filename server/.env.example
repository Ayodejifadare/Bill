# Environment variables for the server
# Copy this file to .env and adjust values as needed.

# Secret used to sign JWT tokens
JWT_SECRET=your_jwt_secret_here

# Google OAuth credentials (required for Google sign-in)
GOOGLE_CLIENT_ID=your_google_oauth_client_id
GOOGLE_CLIENT_SECRET=your_google_oauth_client_secret
# Optional: allow additional client IDs (comma-separated) when verifying tokens
# GOOGLE_ADDITIONAL_CLIENT_IDS=another_client_id,android_client_id

# Log Authorization headers during authentication middleware
# Set to "true" only for debugging. Leave unset or "false" in production.
LOG_AUTH_HEADERS=false

# URL of the frontend application (used for CORS)
FRONTEND_URL=http://localhost:4000
# Additional comma-separated frontend origins (optional)
# FRONTEND_URLS=https://app.example.com,https://admin.example.com

# Connection string for the application's PostgreSQL database
DATABASE_URL="postgresql://USER:PASSWORD@HOST:5432/DATABASE?schema=public"

# Twilio (SMS)
TWILIO_ACCOUNT_SID=AC_REPLACE_ME
TWILIO_AUTH_TOKEN=REPLACE_ME
TWILIO_VERIFY_SERVICE_SID=VA_REPLACE_ME

# Public base URL for generating absolute links (e.g., avatars)
# Example for Render: https://biltip-api.onrender.com
PUBLIC_BASE_URL=

# Force https in generated URLs even if proxy reports http
FORCE_HTTPS=true

# Frontend URL(s) for CORS
# Example: https://bill-kappa-henna.vercel.app
FRONTEND_URL=
FRONTEND_URLS=
# Avatar storage configuration
# Set to 's3' to enable S3-backed avatar uploads; otherwise uses local disk
AVATAR_STORAGE=
AWS_S3_BUCKET=
AWS_S3_REGION=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
# Optional: Public base URL for serving S3 files (e.g., CloudFront domain)
S3_PUBLIC_BASE_URL=
# Optional: Object key prefix inside the bucket (default: uploads/avatars)
S3_PREFIX=
